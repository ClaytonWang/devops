AWSTemplateFormatVersion: '2010-09-09'
Parameters:
  OriginPathParameter:
    Type: String

  ACM:
    Type: String

  ProjectName:
    Type: String

  WebSite:
    Type: String

  Prefix:
    Type: String

  CloudfrontFunctionArn:
    Type: String

  UsedEnviron:
    Type: String
    Default: dev
    AllowedValues:
      - prod
      - cert
      - qa
      - dev

Mappings:

  DomainName:
    dev:
      value: "*.aicat.me"
    qa:
      value: "*.aicat.me"
    cert:
      value: "*.lexisnexis.com"
    prod:
      value: "*.lexisnexis.com"

  HostedZoneId:
    dev:
      value: Z3QNVGM3MHC4FW
    qa:
      value: Z3QNVGM3MHC4FW
#    cert:
#      value: Z00129743JT8GH64SZGKL
#    prod:
#      value: Z0096313GTXJ4SIE1OJ8

Conditions:
  DevEnv: !Or [!Equals [!Ref UsedEnviron, dev], !Equals [ !Ref UsedEnviron, qa ]]
  AddCloudfrontFunction:  !Not [!Equals [!Ref CloudfrontFunctionArn, '']]

Resources:

  CloudFrontOAI:
    Type: AWS::CloudFront::CloudFrontOriginAccessIdentity
    Properties:
      CloudFrontOriginAccessIdentityConfig:
        Comment: !Sub '${ProjectName}-oai-${UsedEnviron}'

  FrontendS3Bucket:
    Type: AWS::S3::Bucket
    Properties:
      AccessControl: Private
      BucketName:  !Sub '${ProjectName}-frontend-${UsedEnviron}'
      CorsConfiguration:
        CorsRules:
          - AllowedHeaders:
              - Authorization
            AllowedMethods:
              - GET
            AllowedOrigins:
              - !FindInMap
                  - DomainName
                  - !Ref UsedEnviron
                  - value
            MaxAge: 3000
      PublicAccessBlockConfiguration:
        BlockPublicAcls: true
        BlockPublicPolicy: true
        IgnorePublicAcls: true
        RestrictPublicBuckets: true


  FrontendBucketPolicy:
    Type: AWS::S3::BucketPolicy
    Properties:
      Bucket:
        Ref: "FrontendS3Bucket"
      PolicyDocument:
        Statement:
          - Action:
              - "s3:GetObject"
            Effect: "Allow"
            Resource:
              Fn::Join:
                - ""
                - - "arn:aws:s3:::"
                  - Ref: "FrontendS3Bucket"
                  - "/*"
            Principal:
              AWS:
                Fn::Join:
                  - ""
                  - - "arn:aws:iam::cloudfront:user/CloudFront Origin Access Identity "
                    - Ref: "CloudFrontOAI"


  FrontendDistribution:
    Type: AWS::CloudFront::Distribution
    Properties:
      DistributionConfig:
        Origins:
        - DomainName: !GetAtt FrontendS3Bucket.DomainName
          Id: !Sub 'S3-${ProjectName}-${UsedEnviron}'
          OriginPath: !Ref 'OriginPathParameter'
          S3OriginConfig:
            OriginAccessIdentity:
              Fn::Join:
                  - ""
                  - - "origin-access-identity/cloudfront/"
                    - Ref: "CloudFrontOAI"
          ConnectionAttempts: 3
          ConnectionTimeout: 10
        Enabled: true
        Comment: !Sub 'Frontend for ${ProjectName}'
        DefaultRootObject: !Sub "${Prefix}/index.html"
        Aliases:
          - !Ref WebSite
        DefaultCacheBehavior:
          AllowedMethods:
          - DELETE
          - GET
          - HEAD
          - OPTIONS
          - PATCH
          - POST
          - PUT
          TargetOriginId: !Sub 'S3-${ProjectName}-${UsedEnviron}'
          ForwardedValues:
            QueryString: 'false'
            Cookies:
              Forward: none
          ViewerProtocolPolicy: redirect-to-https
          Compress: true
          SmoothStreaming: false
          CachePolicyId: 4135ea2d-6df8-44a3-9df3-4b5a84be39ad
#          CachePolicyId:
#            !If
#              - AddCloudfrontFunction
#              - 4135ea2d-6df8-44a3-9df3-4b5a84be39ad  #disable cache
#              - 658327ea-f89d-4fab-a63d-7e88639e58f6  #enable cache
          OriginRequestPolicyId: 88a5eaf4-2fd4-4709-b370-b4c650ea3fcf
          FunctionAssociations:
            !If
              - AddCloudfrontFunction
              - - EventType: viewer-request
                  FunctionARN: !Ref "CloudfrontFunctionArn"
              - - !Ref "AWS::NoValue"
        CacheBehaviors:
          - PathPattern: "/assets/*"
            AllowedMethods:
              - DELETE
              - GET
              - HEAD
              - OPTIONS
              - PATCH
              - POST
              - PUT
            TargetOriginId: !Sub 'S3-${ProjectName}-${UsedEnviron}'
            ForwardedValues:
              QueryString: 'false'
              Cookies:
                Forward: none
            ViewerProtocolPolicy: redirect-to-https
            Compress: true
            SmoothStreaming: false
            CachePolicyId: 658327ea-f89d-4fab-a63d-7e88639e58f6
            OriginRequestPolicyId: 88a5eaf4-2fd4-4709-b370-b4c650ea3fcf
#          - PathPattern: "*index.html"
#            AllowedMethods:
#              - DELETE
#              - GET
#              - HEAD
#              - OPTIONS
#              - PATCH
#              - POST
#              - PUT
#            TargetOriginId: !Sub 'S3-${ProjectName}-${UsedEnviron}'
#            ForwardedValues:
#              QueryString: 'false'
#              Cookies:
#                Forward: none
#            ViewerProtocolPolicy: redirect-to-https
#            Compress: true
#            SmoothStreaming: false
#            CachePolicyId: 4135ea2d-6df8-44a3-9df3-4b5a84be39ad
#            OriginRequestPolicyId: 88a5eaf4-2fd4-4709-b370-b4c650ea3fcf
#          - PathPattern: "*base-url.json"
#            AllowedMethods:
#                - DELETE
#                - GET
#                - HEAD
#                - OPTIONS
#                - PATCH
#                - POST
#                - PUT
#            TargetOriginId: !Sub 'S3-${ProjectName}-${UsedEnviron}'
#            ForwardedValues:
#                QueryString: 'false'
#                Cookies:
#                  Forward: none
#            ViewerProtocolPolicy: redirect-to-https
#            Compress: true
#            SmoothStreaming: false
#            CachePolicyId: 4135ea2d-6df8-44a3-9df3-4b5a84be39ad
#            OriginRequestPolicyId: 88a5eaf4-2fd4-4709-b370-b4c650ea3fcf
        PriceClass: PriceClass_All
        HttpVersion: http2
        ViewerCertificate:
          AcmCertificateArn:  !Ref 'ACM'
          SslSupportMethod: sni-only
          MinimumProtocolVersion: TLSv1.2_2019
        CustomErrorResponses:
          - ErrorCode: 403
            ErrorCachingMinTTL: 0
            ResponseCode: 200
            ResponsePagePath: /index.html
          - ErrorCode: 404
            ErrorCachingMinTTL: 0
            ResponseCode: 200
            ResponsePagePath: /index.html


  FrontendRoute53Record:
    Type: AWS::Route53::RecordSet
    Condition: DevEnv
    Properties:
      HostedZoneId: !FindInMap
        - HostedZoneId
        - !Ref UsedEnviron
        - value
      Name: !Ref WebSite
      Type: A
      AliasTarget:
        HostedZoneId: Z2FDTNDATAQYW2
        DNSName: !GetAtt
          - FrontendDistribution
          - DomainName

Outputs:
  FrontendS3Bucket:
    Description: The ARN of the frontend S3
    Value:
      Fn::Join:
        - ""
        - - "s3://"
          - Ref: "FrontendS3Bucket"

#  TaxonomyS3Bucket:
#    Description: The ARN of the taxonomy S3
#    Value:
#      Fn::Join:
#        - ""
#        - - "s3://"
#          - Ref: "TaxonomyS3Bucket"



